{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageCount","useMemo","Math","ceil","pages","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","setCurrentPage","setPerPage","indexOfLastItem","index","indexOfFirstItem","itemsPerPage","slice","handleChangeSelect","useCallback","e","target","value","handleChangePage","id","onChange","autoComplete","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,mBAAQ,kBAAMC,KAAKC,KAAKP,EAAQC,KAAU,CAACA,IAEvDO,EAAQf,EAAW,EAAGW,GAc5B,OACE,qBAAIK,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBT,IAFd,SAKE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAxBiB,WACH,IAAhBX,GACFC,EAAaD,EAAc,IAiBzB,oBAWDM,EAAMM,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQd,IAAgBa,IAJ9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMV,EAAaY,IAJ9B,SAMGA,KAZEA,MAiBT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUT,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBE,EAC/BS,QArDiB,WAClBX,IAAgBE,GACnBD,EAAaD,EAAc,IA8CzB,wBCtEFF,EAAQ,GACRiB,EAAQxB,EAAW,EAAGO,GACzBc,KAAI,SAAAjB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KAEMC,EAAkBjB,mBAAQ,WAC9B,IAAMkB,EAAQrB,EAAcD,EAE5B,OAAIsB,EAAQvB,EACHA,EAGFuB,IACN,CAACrB,EAAaD,EAASD,IAEpBwB,EAAmBnB,mBAAQ,WAC/B,OAAQH,EAAc,GAAKD,IAC1B,CAACA,EAASC,IAEPuB,EAAepB,mBAAQ,kBAC3BY,EAAMS,MAAMF,EAAkBF,KAChC,CAACE,EAAkBF,IAEbK,EAAqBC,uBACzB,SAACC,GACCR,GAAYQ,EAAEC,OAAOC,OACrBX,EAAe,KACd,CAACC,EAAYD,IAGZY,EAAmBJ,uBAAY,SAACb,GACpCK,EAAeL,KACd,CAACK,IAEJ,OACE,sBAAKX,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiCsB,EAAmB,EADpD,cAC2DF,EAD3D,eACiFtB,EADjF,OAIA,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVsB,MAAO9B,EACPiC,SAAUP,EACVQ,aAAa,MANf,UAQE,wBAAQJ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc6B,IAGhB,6BACGP,EAAaX,KAAI,SAAAuB,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YChFjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7290fa92.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { getNumbers } from '../../utils';\n\ntype PaginationProps = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = useMemo(() => Math.ceil(total / perPage), [perPage]);\n\n  const pages = getNumbers(1, pageCount);\n\n  const handleChangePrev = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1)\n    }\n  }\n\n  const handleChangeNext = () => {\n    if  (currentPage !== pageCount) {\n      onPageChange(currentPage + 1)\n    }\n  }\n  \n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handleChangePrev}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === pageCount },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageCount}\n          onClick={handleChangeNext}\n        >\n          »\n        </a>\n      </li>\n\n    </ul>\n  );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst total = 42;\nconst items = getNumbers(1, total)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const indexOfLastItem = useMemo(() => {\n    const index = currentPage * perPage;\n\n    if (index > total) {\n      return total;\n    }\n\n    return index;\n  }, [currentPage, perPage, total]);\n\n  const indexOfFirstItem = useMemo(() => {\n    return (currentPage - 1) * perPage;\n  }, [perPage, currentPage]);\n\n  const itemsPerPage = useMemo(() => (\n    items.slice(indexOfFirstItem, indexOfLastItem)),\n  [indexOfFirstItem, indexOfLastItem]);\n\n  const handleChangeSelect = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      setPerPage(+e.target.value);\n      setCurrentPage(1);\n    }, [setPerPage, setCurrentPage],\n  );\n\n  const handleChangePage = useCallback((page: number) => {\n    setCurrentPage(page);\n  }, [setCurrentPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfFirstItem + 1} - ${indexOfLastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChangeSelect}\n            autoComplete=\"off\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleChangePage}\n      />\n\n      <ul>\n        {itemsPerPage.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}